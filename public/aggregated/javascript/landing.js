/************************************************************************
 * 'landing.js'
 *
 * This file is GENERATED by the AssetAggregator; do not edit it.
 * Last modified: 2016-07-14 01:06:05 +0000
 * Generated at: 2016-07-14 16:15:13 +0000
 ************************************************************************/


/************************************************************************
 * :asset_packager_compatibility, 'config/asset_packages.yml' (last modified: 2016-07-14 01:06:05 +0000)
 ************************************************************************/

/* ----------------------------------------------------------------------
   - public/javascripts/shared/vendor/lazy_image.js (last modified: 2015-11-10 00:53:02 +0000)
   ---------------------------------------------------------------------- */
/*
  lazyload.js: Image lazy loading

  Copyright (c) 2012 Vincent Voyer, St√©phane Rios

  Permission is hereby granted, free of charge, to any person obtaining
  a copy of this software and associated documentation files (the
  "Software"), to deal in the Software without restriction, including
  without limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to
  the following conditions:

  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/

(function(window, document){

  var
    // Vertical offset in px. Used for preloading images while scrolling
    offset = 200,
    //where to get real src
    lazyAttr = 'data-src',
    // Window height
    winH,
    // Self-populated page images array, we do not getElementsByTagName
    imgs = [],
    pageHasLoaded,

    // throttled functions, so that we do not call them too much
    getWindowHeightT = throttle(getWindowHeight, 20),
    showImagesT = throttle(showImages, 20);

  // Called from every lazy <img> onload event
  window['lzld'] = onFakeImgLoad;
  window['force_lzld'] = loadImg;

  // Bind events
  getWindowHeight();
  addEvent(window, 'resize', getWindowHeightT);
  addEvent(window, 'scroll', showImagesT);
  addEvent(document, 'DOMContentLoaded', onDomReady);
  addEvent(window, 'load', onLoad);

  function onFakeImgLoad(img) {
    // To avoid onload being called and called and called ...
    // This is what prevents pagespeed's lazyload to work on IE!
    img.onload = null;

    showIfVisible(img, imgs.push(img) - 1);
  }

  function onDomReady() {
    showImagesT();
    setTimeout(showImagesT, 20);
  }

  function onLoad() {
    pageHasLoaded = true;
    // if page height changes (hiding elements at start)
    // we should recheck for new in viewport images that need to be shown
    // see onload test
    showImagesT();
    // we are the first to be notified about onload, so let others event handlers
    // pass and then try again
    setTimeout(showImagesT, 20);
  }

  function throttle(fn, minDelay) {
    var lastCall = 0;
    return function() {
      var now = +new Date;
      if (now - lastCall < minDelay) {
        return;
      }
      lastCall = now;
      // we do not return anything as
      // https://github.com/documentcloud/underscore/issues/387
      fn.apply(this, arguments);
    }
  }

  // cross browser event add
  function addEvent( el, type, fn ) {
    if (el.attachEvent) {
      el.attachEvent && el.attachEvent( 'on' + type, fn );
    } else {
      el.addEventListener( type, fn, false );
    }
  }

  // cross browser event remove
  function removeEvent( el, type, fn ) {
    if (el.detachEvent) {
      el.detachEvent && el.detachEvent( 'on' + type, fn );
    } else {
      el.removeEventListener( type, fn, false );
    }
  }
  
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  function loadImg(img, index){
    if(!img.getAttribute(lazyAttr)) return; // not used properly or already loaded.
    img.src = img.getAttribute(lazyAttr);
    img.removeAttribute(lazyAttr);
    if(!index && index !== 0) index = __indexOf.call(imgs, img);
    if(index >= 0) imgs[index] = null;
  }

  // img = dom element
  // index = imgs array index
  function showIfVisible(img, index) {
    var invis = img.getBoundingClientRect().top == 0 && img.getBoundingClientRect().bottom == 0 
    if (!invis && img.getBoundingClientRect().top < winH + offset) {
      loadImg(img, index);
      return true; // img shown
    } else {
      return false; // img to be shown
    }
  }

  // cross browser window height
  function getWindowHeight() {
    winH = window.innerHeight ||
      (document.documentElement && document.documentElement.clientHeight) ||
      (document.body && document.body.clientHeight) ||
      10000;
  }

  // Loop through images array to find to-be-shown images
  function showImages() {
    var
      last = imgs.length,
      current,
      allImagesDone = true;

    for (current = 0; current < last; current++) {
      var img = imgs[current];
      // if showIfVisible is false, it means we have some waiting images to be
      // shown
      if(img !== null && !showIfVisible(img, current)) {
        allImagesDone = false;
      }
    }

    if (allImagesDone && pageHasLoaded) {
    }
  }

  function unsubscribe() {
    // removeEvent(window, 'resize', getWindowHeightT);
    // removeEvent(window, 'scroll', showImagesT);
    // removeEvent(window, 'load', onLoad);
    // removeEvent(document, 'DOMContentLoaded', onDomReady);
  }

})(this, document);


/* ----------------------------------------------------------------------
   - public/javascripts/jquery.backstretch.js (last modified: 2015-11-10 00:53:02 +0000)
   ---------------------------------------------------------------------- */
/*! Backstretch - v2.0.4 - 2013-06-19
* http://srobbin.com/jquery-plugins/backstretch/
* Copyright (c) 2013 Scott Robbin; Licensed MIT */

;(function ($, window, undefined) {
  'use strict';

  /* PLUGIN DEFINITION
   * ========================= */

  $.fn.backstretch = function (images, options) {
    // We need at least one image or method name
    if (images === undefined || images.length === 0) {
      $.error("No images were supplied for Backstretch");
    }

    /*
     * Scroll the page one pixel to get the right window height on iOS
     * Pretty harmless for everyone else
    */
    if ($(window).scrollTop() === 0 ) {
      window.scrollTo(0, 0);
    }

    return this.each(function () {
      var $this = $(this)
        , obj = $this.data('backstretch');

      // Do we already have an instance attached to this element?
      if (obj) {

        // Is this a method they're trying to execute?
        if (typeof images == 'string' && typeof obj[images] == 'function') {
          // Call the method
          obj[images](options);

          // No need to do anything further
          return;
        }

        // Merge the old options with the new
        options = $.extend(obj.options, options);

        // Remove the old instance
        obj.destroy(true);
      }

      obj = new Backstretch(this, images, options);
      $this.data('backstretch', obj);
    });
  };

  // If no element is supplied, we'll attach to body
  $.backstretch = function (images, options) {
    // Return the instance
    return $('body')
            .backstretch(images, options)
            .data('backstretch');
  };

  // Custom selector
  $.expr[':'].backstretch = function(elem) {
    return $(elem).data('backstretch') !== undefined;
  };

  /* DEFAULTS
   * ========================= */

  $.fn.backstretch.defaults = {
      centeredX: true   // Should we center the image on the X axis?
    , centeredY: true   // Should we center the image on the Y axis?
    , duration: 5000    // Amount of time in between slides (if slideshow)
    , fade: 0           // Speed of fade transition between slides
  };

  /* STYLES
   * 
   * Baked-in styles that we'll apply to our elements.
   * In an effort to keep the plugin simple, these are not exposed as options.
   * That said, anyone can override these in their own stylesheet.
   * ========================= */
  var styles = {
      wrap: {
          left: 0
        , top: 0
        , overflow: 'hidden'
        , margin: 0
        , padding: 0
        , height: '100%'
        , width: '100%'
        , zIndex: -999999
      }
    , img: {
          position: 'absolute'
        , display: 'none'
        , margin: 0
        , padding: 0
        , border: 'none'
        , width: 'auto'
        , height: 'auto'
        , maxHeight: 'none'
        , maxWidth: 'none'
        , zIndex: -999999
      }
  };

  /* CLASS DEFINITION
   * ========================= */
  var Backstretch = function (container, images, options) {
    this.options = $.extend({}, $.fn.backstretch.defaults, options || {});

    /* In its simplest form, we allow Backstretch to be called on an image path.
     * e.g. $.backstretch('/path/to/image.jpg')
     * So, we need to turn this back into an array.
     */
    this.images = $.isArray(images) ? images : [images];

    // Preload images
    $.each(this.images, function () {
      $('<img />')[0].src = this;
    });    

    // Convenience reference to know if the container is body.
    this.isBody = container === document.body;

    /* We're keeping track of a few different elements
     *
     * Container: the element that Backstretch was called on.
     * Wrap: a DIV that we place the image into, so we can hide the overflow.
     * Root: Convenience reference to help calculate the correct height.
     */
    this.$container = $(container);
    this.$root = this.isBody ? supportsFixedPosition ? $(window) : $(document) : this.$container;

    // Don't create a new wrap if one already exists (from a previous instance of Backstretch)
    var $existing = this.$container.children(".backstretch").first();
    this.$wrap = $existing.length ? $existing : $('<div class="backstretch"></div>').css(styles.wrap).appendTo(this.$container);

    // Non-body elements need some style adjustments
    if (!this.isBody) {
      // If the container is statically positioned, we need to make it relative,
      // and if no zIndex is defined, we should set it to zero.
      var position = this.$container.css('position')
        , zIndex = this.$container.css('zIndex');

      this.$container.css({
          position: position === 'static' ? 'relative' : position
        , zIndex: zIndex === 'auto' ? 0 : zIndex
        , background: 'none'
      });
      
      // Needs a higher z-index
      this.$wrap.css({zIndex: -999998});
    }

    // Fixed or absolute positioning?
    this.$wrap.css({
      position: this.isBody && supportsFixedPosition ? 'fixed' : 'absolute'
    });

    // Set the first image
    this.index = 0;
    this.show(this.index);

    // Listen for resize
    $(window).on('resize.backstretch', $.proxy(this.resize, this))
             .on('orientationchange.backstretch', $.proxy(function () {
                // Need to do this in order to get the right window height
                if (this.isBody && window.pageYOffset === 0) {
                  window.scrollTo(0, 1);
                  this.resize();
                }
             }, this));
  };

  /* PUBLIC METHODS
   * ========================= */
  Backstretch.prototype = {
      resize: function () {
        try {
          var bgCSS = {left: 0, top: 0}
            , rootWidth = this.isBody ? this.$root.width() : this.$root.innerWidth()
            , bgWidth = rootWidth
            , rootHeight = this.isBody ? ( window.innerHeight ? window.innerHeight : this.$root.height() ) : this.$root.innerHeight()
            , bgHeight = bgWidth / this.$img.data('ratio')
            , bgOffset;

            if (this.options.heightDelta) {
              rootHeight += this.options.heightDelta;
            }

            // Make adjustments based on image ratio
            if (bgHeight >= rootHeight) {
                bgOffset = (bgHeight - rootHeight) / 2;
                if(this.options.centeredY) {
                  bgCSS.top = '-' + bgOffset + 'px';
                }
            } else {
                bgHeight = rootHeight;
                bgWidth = bgHeight * this.$img.data('ratio');
                bgOffset = (bgWidth - rootWidth) / 2;
                if(this.options.centeredX) {
                  bgCSS.left = '-' + bgOffset + 'px';
                }
            }

            this.$wrap.css({width: rootWidth, height: rootHeight})
                      .find('img:not(.deleteable)').css({width: bgWidth, height: bgHeight}).css(bgCSS);
        } catch(err) {
            // IE7 seems to trigger resize before the image is loaded.
            // This try/catch block is a hack to let it fail gracefully.
        }

        return this;
      }

      // Show the slide at a certain position
    , show: function (newIndex) {

        // Validate index
        if (Math.abs(newIndex) > this.images.length - 1) {
          return;
        }

        // Vars
        var self = this
          , oldImage = self.$wrap.find('img').addClass('deleteable')
          , evtOptions = { relatedTarget: self.$container[0] };

        // Trigger the "before" event
        self.$container.trigger($.Event('backstretch.before', evtOptions), [self, newIndex]); 

        // Set the new index
        this.index = newIndex;

        // Pause the slideshow
        clearInterval(self.interval);

        // New image
        self.$img = $('<img />')
                      .css(styles.img)
                      .bind('load', function (e) {
                        var imgWidth = this.width || $(e.target).width()
                          , imgHeight = this.height || $(e.target).height();
                        
                        // Save the ratio
                        $(this).data('ratio', imgWidth / imgHeight);

                        // Show the image, then delete the old one
                        // "speed" option has been deprecated, but we want backwards compatibilty
                        $(this).fadeIn(self.options.speed || self.options.fade, function () {
                          oldImage.remove();

                          // Resume the slideshow
                          if (!self.paused) {
                            self.cycle();
                          }

                          // Trigger the "after" and "show" events
                          // "show" is being deprecated
                          $(['after', 'show']).each(function () {
                            self.$container.trigger($.Event('backstretch.' + this, evtOptions), [self, newIndex]);
                          });
                        });

                        // Resize
                        self.resize();
                      })
                      .appendTo(self.$wrap);

        // Hack for IE img onload event
        self.$img.attr('src', self.images[newIndex]);
        return self;
      }

    , next: function () {
        // Next slide
        return this.show(this.index < this.images.length - 1 ? this.index + 1 : 0);
      }

    , prev: function () {
        // Previous slide
        return this.show(this.index === 0 ? this.images.length - 1 : this.index - 1);
      }

    , pause: function () {
        // Pause the slideshow
        this.paused = true;
        return this;
      }

    , resume: function () {
        // Resume the slideshow
        this.paused = false;
        this.next();
        return this;
      }

    , cycle: function () {
        // Start/resume the slideshow
        if(this.images.length > 1) {
          // Clear the interval, just in case
          clearInterval(this.interval);

          this.interval = setInterval($.proxy(function () {
            // Check for paused slideshow
            if (!this.paused) {
              this.next();
            }
          }, this), this.options.duration);
        }
        return this;
      }

    , destroy: function (preserveBackground) {
        // Stop the resize events
        $(window).off('resize.backstretch orientationchange.backstretch');

        // Clear the interval
        clearInterval(this.interval);

        // Remove Backstretch
        if(!preserveBackground) {
          this.$wrap.remove();          
        }
        this.$container.removeData('backstretch');
      }
  };

  /* SUPPORTS FIXED POSITION?
   *
   * Based on code from jQuery Mobile 1.1.0
   * http://jquerymobile.com/
   *
   * In a nutshell, we need to figure out if fixed positioning is supported.
   * Unfortunately, this is very difficult to do on iOS, and usually involves
   * injecting content, scrolling the page, etc.. It's ugly.
   * jQuery Mobile uses this workaround. It's not ideal, but works.
   *
   * Modified to detect IE6
   * ========================= */

  var supportsFixedPosition = (function () {
    var ua = navigator.userAgent
      , platform = navigator.platform
        // Rendering engine is Webkit, and capture major version
      , wkmatch = ua.match( /AppleWebKit\/([0-9]+)/ )
      , wkversion = !!wkmatch && wkmatch[ 1 ]
      , ffmatch = ua.match( /Fennec\/([0-9]+)/ )
      , ffversion = !!ffmatch && ffmatch[ 1 ]
      , operammobilematch = ua.match( /Opera Mobi\/([0-9]+)/ )
      , omversion = !!operammobilematch && operammobilematch[ 1 ]
      , iematch = ua.match( /MSIE ([0-9]+)/ )
      , ieversion = !!iematch && iematch[ 1 ];

    return !(
      // iOS 4.3 and older : Platform is iPhone/Pad/Touch and Webkit version is less than 534 (ios5)
      ((platform.indexOf( "iPhone" ) > -1 || platform.indexOf( "iPad" ) > -1  || platform.indexOf( "iPod" ) > -1 ) && wkversion && wkversion < 534) ||
      
      // Opera Mini
      (window.operamini && ({}).toString.call( window.operamini ) === "[object OperaMini]") ||
      (operammobilematch && omversion < 7458) ||
      
      //Android lte 2.1: Platform is Android and Webkit version is less than 533 (Android 2.2)
      (ua.indexOf( "Android" ) > -1 && wkversion && wkversion < 533) ||
      
      // Firefox Mobile before 6.0 -
      (ffversion && ffversion < 6) ||
      
      // WebOS less than 3
      ("palmGetResource" in window && wkversion && wkversion < 534) ||
      
      // MeeGo
      (ua.indexOf( "MeeGo" ) > -1 && ua.indexOf( "NokiaBrowser/8.5.0" ) > -1) ||
      
      // IE6
      (ieversion && ieversion <= 6)
    );
  }());

}(jQuery, window));


/* ----------------------------------------------------------------------
   - public/javascripts/jquery.cycle.lite.js (last modified: 2015-11-10 00:53:02 +0000)
   ---------------------------------------------------------------------- */
/*!
 * jQuery Cycle Lite Plugin
 * http://malsup.com/jquery/cycle/lite/
 * Copyright (c) 2008-2012 M. Alsup
 * Version: 1.7 (20-FEB-2013)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 * Requires: jQuery v1.3.2 or later
 */
;(function($) {
"use strict";

var ver = 'Lite-1.7';
var msie = /MSIE/.test(navigator.userAgent);

$.fn.cycle = function(options) {
    return this.each(function() {
        options = options || {};
        
        if (this.cycleTimeout) 
            clearTimeout(this.cycleTimeout);

        this.cycleTimeout = 0;
        this.cyclePause = 0;
        
        var $cont = $(this);
        var $slides = options.slideExpr ? $(options.slideExpr, this) : $cont.children();
        var els = $slides.get();
        if (els.length < 2) {
            if (window.console)
                console.log('terminating; too few slides: ' + els.length);
            return; // don't bother
        }

        // support metadata plugin (v1.0 and v2.0)
        var opts = $.extend({}, $.fn.cycle.defaults, options || {}, $.metadata ? $cont.metadata() : $.meta ? $cont.data() : {});
        var meta = $.isFunction($cont.data) ? $cont.data(opts.metaAttr) : null;
        if (meta)
            opts = $.extend(opts, meta);
            
        opts.before = opts.before ? [opts.before] : [];
        opts.after = opts.after ? [opts.after] : [];
        opts.after.unshift(function(){ opts.busy=0; });
            
        // allow shorthand overrides of width, height and timeout
        var cls = this.className;
        opts.width = parseInt((cls.match(/w:(\d+)/)||[])[1], 10) || opts.width;
        opts.height = parseInt((cls.match(/h:(\d+)/)||[])[1], 10) || opts.height;
        opts.timeout = parseInt((cls.match(/t:(\d+)/)||[])[1], 10) || opts.timeout;

        if ($cont.css('position') == 'static') 
            $cont.css('position', 'relative');
        if (opts.width) 
            $cont.width(opts.width);
        if (opts.height && opts.height != 'auto') 
            $cont.height(opts.height);

        var first = 0;
        $slides.css({position: 'absolute', top:0}).each(function(i) {
            $(this).css('z-index', els.length-i);
        });
        
        $(els[first]).css('opacity',1).show(); // opacity bit needed to handle reinit case
        if (msie) 
            els[first].style.removeAttribute('filter');

        if (opts.fit && opts.width) 
            $slides.width(opts.width);
        if (opts.fit && opts.height && opts.height != 'auto') 
            $slides.height(opts.height);
        if (opts.pause) 
            $cont.hover(function(){this.cyclePause=1;}, function(){this.cyclePause=0;});

        var txFn = $.fn.cycle.transitions[opts.fx];
        if (txFn)
            txFn($cont, $slides, opts);
        
        $slides.each(function() {
            var $el = $(this);
            this.cycleH = (opts.fit && opts.height) ? opts.height : $el.height();
            this.cycleW = (opts.fit && opts.width) ? opts.width : $el.width();
        });

        if (opts.cssFirst)
            $($slides[first]).css(opts.cssFirst);

        if (opts.timeout) {
            // ensure that timeout and speed settings are sane
            if (opts.speed.constructor == String)
                opts.speed = {slow: 600, fast: 200}[opts.speed] || 400;
            if (!opts.sync)
                opts.speed = opts.speed / 2;
            while((opts.timeout - opts.speed) < 250)
                opts.timeout += opts.speed;
        }
        opts.speedIn = opts.speed;
        opts.speedOut = opts.speed;

        opts.slideCount = els.length;
        opts.currSlide = first;
        opts.nextSlide = 1;

        // fire artificial events
        var e0 = $slides[first];
        if (opts.before.length)
            opts.before[0].apply(e0, [e0, e0, opts, true]);
        if (opts.after.length > 1)
            opts.after[1].apply(e0, [e0, e0, opts, true]);
        
        if (opts.click && !opts.next)
            opts.next = opts.click;
        if (opts.next)
            $(opts.next).unbind('click.cycle').bind('click.cycle', function(){return advance(els,opts,opts.rev?-1:1);});
        if (opts.prev)
            $(opts.prev).unbind('click.cycle').bind('click.cycle', function(){return advance(els,opts,opts.rev?1:-1);});

        if (opts.timeout)
            this.cycleTimeout = setTimeout(function() {
                go(els,opts,0,!opts.rev);
            }, opts.timeout + (opts.delay||0));
    });
};

function go(els, opts, manual, fwd) {
    if (opts.busy) 
        return;
    var p = els[0].parentNode, curr = els[opts.currSlide], next = els[opts.nextSlide];
    if (p.cycleTimeout === 0 && !manual) 
        return;

    if (manual || !p.cyclePause) {
        if (opts.before.length)
            $.each(opts.before, function(i,o) { o.apply(next, [curr, next, opts, fwd]); });
        var after = function() {
            if (msie)
                this.style.removeAttribute('filter');
            $.each(opts.after, function(i,o) { o.apply(next, [curr, next, opts, fwd]); });
            queueNext(opts);
        };

        if (opts.nextSlide != opts.currSlide) {
            opts.busy = 1;
            $.fn.cycle.custom(curr, next, opts, after);
        }
        var roll = (opts.nextSlide + 1) == els.length;
        opts.nextSlide = roll ? 0 : opts.nextSlide+1;
        opts.currSlide = roll ? els.length-1 : opts.nextSlide-1;
    } else {
      queueNext(opts);
    }

    function queueNext(opts) {
        if (opts.timeout)
            p.cycleTimeout = setTimeout(function() { go(els,opts,0,!opts.rev); }, opts.timeout);
    }
}

// advance slide forward or back
function advance(els, opts, val) {
    var p = els[0].parentNode, timeout = p.cycleTimeout;
    if (timeout) {
        clearTimeout(timeout);
        p.cycleTimeout = 0;
    }
    opts.nextSlide = opts.currSlide + val;
    if (opts.nextSlide < 0) {
        opts.nextSlide = els.length - 1;
    }
    else if (opts.nextSlide >= els.length) {
        opts.nextSlide = 0;
    }
    go(els, opts, 1, val>=0);
    return false;
}

$.fn.cycle.custom = function(curr, next, opts, cb) {
    var $l = $(curr), $n = $(next);
    $n.css(opts.cssBefore);
    var fn = function() {$n.animate(opts.animIn, opts.speedIn, opts.easeIn, cb);};
    $l.animate(opts.animOut, opts.speedOut, opts.easeOut, function() {
        $l.css(opts.cssAfter);
        if (!opts.sync)
            fn();
    });
    if (opts.sync)
        fn();
};

$.fn.cycle.transitions = {
    fade: function($cont, $slides, opts) {
        $slides.not(':eq(0)').hide();
        opts.cssBefore = { opacity: 0, display: 'block' };
        opts.cssAfter  = { display: 'none' };
        opts.animOut = { opacity: 0 };
        opts.animIn = { opacity: 1 };
    },
    fadeout: function($cont, $slides, opts) {
        opts.before.push(function(curr,next,opts,fwd) {
            $(curr).css('zIndex',opts.slideCount + (fwd === true ? 1 : 0));
            $(next).css('zIndex',opts.slideCount + (fwd === true ? 0 : 1));
        });
        $slides.not(':eq(0)').hide();
        opts.cssBefore = { opacity: 1, display: 'block', zIndex: 1 };
        opts.cssAfter  = { display: 'none', zIndex: 0 };
        opts.animOut = { opacity: 0 };
        opts.animIn = { opacity: 1 };
    }
};

$.fn.cycle.ver = function() { return ver; };

// @see: http://malsup.com/jquery/cycle/lite/
$.fn.cycle.defaults = {
    animIn:        {},
    animOut:       {},
    fx:           'fade',
    after:         null,
    before:        null,
    cssBefore:     {},
    cssAfter:      {},
    delay:         0,
    fit:           0,
    height:       'auto',
    metaAttr:     'cycle',
    next:          null,
    pause:         false,
    prev:          null,
    speed:         1000,
    slideExpr:     null,
    sync:          true,
    timeout:       4000
};

})(jQuery);




/************************************************************************
 * :asset_packager_compatibility, 'config/asset_packages.yml' (last modified: 2016-07-14 01:06:05 +0000)
 ************************************************************************/





/************************************************************************
 * :files, 'public/javascripts/shared', ... (last modified: (none))
 ************************************************************************/





/************************************************************************
 * :files, 'app/views', ... (last modified: (none))
 ************************************************************************/





/************************************************************************
 * :files, 'app/views', ... (last modified: 2015-11-10 00:53:08 +0000)
 ************************************************************************/

/* ----------------------------------------------------------------------
   - app/views/landing/shared.coffee (last modified: 2015-11-10 00:53:08 +0000)
   ---------------------------------------------------------------------- */
(function() {
  var SCROLL_DOWN_DURATION, scroll_down;

  if (Scribd.Landing == null) {
    Scribd.Landing = {};
  }

  SCROLL_DOWN_DURATION = 500;

  scroll_down = function(current_slide, top_offset) {
    var $contents, $next_slide, new_scroll_top, slide_contents_position, slide_position;
    $next_slide = $(current_slide).closest('.landing_slide').next();
    $contents = $next_slide.find('.landing_slide_contents');
    slide_position = $next_slide.offset().top - top_offset;
    slide_contents_position = $contents.offset().top - top_offset;
    new_scroll_top = Math.min(slide_position, slide_contents_position);
    return $('html, body').animate({
      scrollTop: new_scroll_top
    }, SCROLL_DOWN_DURATION);
  };

  Scribd.Landing.Shared = {
    scroll_down: scroll_down
  };

}).call(this);




/************************************************************************
 * :class_inlines, 'app/views', ... (last modified: 2016-04-19 20:59:57 +0000)
 ************************************************************************/

/* ----------------------------------------------------------------------
   - app/views/shared/smart_tabs.coffee (last modified: 2016-01-21 00:14:18 +0000)
   ---------------------------------------------------------------------- */
(function() {
  Scribd.SmartTabs = (function() {
    function SmartTabs(container, opts) {
      this.container = container;
      this.opts = opts != null ? opts : {};
      this.container = $(this.container);
      this.setup_opts();
      this.setup_tabs();
      this.setup_events();
    }

    SmartTabs.prototype.setup_opts = function() {
      return this.opts = _.extend({
        bind_click: false
      }, this.opts);
    };

    SmartTabs.prototype.setup_tabs = function() {
      var more_tab, nav, parent_width, tabs, update_tabs;
      if (!this.container.find(".tab.hover_menu").length) {
        return;
      }
      nav = this.container;
      tabs = nav.find(".tab").not(":last");
      more_tab = nav.find(".tab:last");
      parent_width = $(window).width();
      update_tabs = (function(_this) {
        return function() {
          var $el, available_width, extra_tabs, i, j, k, len, len1, real_width, results, sub_menu, t, tab, tpl;
          available_width = Math.min($(window).width(), _this.opts.max_width) - 200;
          tabs.show();
          real_width = more_tab.outerWidth(true);
          for (i = 0, len = tabs.length; i < len; i++) {
            t = tabs[i];
            real_width += $(t).outerWidth(true);
          }
          extra_tabs = [];
          for (j = tabs.length - 1; j >= 0; j += -1) {
            t = tabs[j];
            if (real_width <= available_width) {
              break;
            }
            t = $(t);
            real_width -= t.outerWidth(true);
            t.hide();
            extra_tabs.push(t);
          }
          more_tab.toggle(!!extra_tabs.length);
          if (extra_tabs.length) {
            sub_menu = more_tab.find(".sub_menu");
            tpl = _.template(sub_menu.data("row_template"));
            sub_menu.empty();
            results = [];
            for (k = 0, len1 = extra_tabs.length; k < len1; k++) {
              tab = extra_tabs[k];
              $el = $(tpl({
                tab_name: tab.data("name"),
                label: tab.text()
              }));
              $el.data(tab.data());
              if (tab.hasClass("current")) {
                more_tab.addClass("current");
              }
              results.push(sub_menu.append($el));
            }
            return results;
          } else {
            return _this.container.find(".tab:visible:last").addClass("last");
          }
        };
      })(this);
      $(window).on("resize", _.debounce(update_tabs, 100));
      return update_tabs();
    };

    SmartTabs.prototype.set_current_tab = function(el) {
      var current_url, modified_url;
      el.addClass("current").siblings(".current").removeClass("current");
      if (this.opts.modify_url) {
        current_url = window.location.href;
        modified_url = Scribd.add_url_parameter(current_url, "tab", el.data("section"));
        return window.history.replaceState({}, "profile_tab", modified_url);
      }
    };

    SmartTabs.prototype.setup_events = function() {
      this.container.on("scribd:set_tab", (function(_this) {
        return function(e) {
          return _this.set_current_tab($(e.target));
        };
      })(this));
      if (!this.opts.bind_click) {
        return;
      }
      this.container.on("click", ".tab", (function(_this) {
        return function(e) {
          if ($(e.currentTarget).is(".current") || $(e.currentTarget).is(".unselectable")) {
            return;
          }
          return _this.set_current_tab($(e.currentTarget));
        };
      })(this));
      return this.container.trigger("scribd:tab:clicked", $(e.currentTarget));
    };

    return SmartTabs;

  })();

}).call(this);


/* ----------------------------------------------------------------------
   - app/views/promo_code/custom_promo.coffee (last modified: 2015-11-10 00:53:08 +0000)
   ---------------------------------------------------------------------- */
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Scribd.CustomPromo = (function() {
    function CustomPromo(container, opts) {
      this.container = container;
      this.opts = opts != null ? opts : {};
      this.submit = bind(this.submit, this);
      this.container = $(this.container);
      this.container.on("click", ".post_promo", (function(_this) {
        return function() {
          return _this.submit();
        };
      })(this));
    }

    CustomPromo.prototype.submit = function(callback) {
      return $.post("/promo_code/submit", {
        promo: this.opts.promo
      }, (function(_this) {
        return function(res) {
          var lb;
          if (typeof callback === "function") {
            callback(res);
          }
          if (res.valid && !Scribd.logged_in) {
            if (_this.opts.is_mobile) {
              return window.location.href = "/mobile/login?from=" + (encodeURIComponent(res.next_url));
            } else {
              lb = Scribd.Lightbox.open('signup_lb', Scribd.LoginLightbox, {
                no_redirect: false
              });
              lb.set_header("Join today");
              return lb.set_login_param('next_url', res.next_url);
            }
          } else if (res.flash) {
            return (new Scribd.Flasher()).show('error', res.flash);
          } else if (res.valid && res.next_url) {
            return window.location.href = res.next_url;
          }
        };
      })(this));
    };

    return CustomPromo;

  })();

}).call(this);


/* ----------------------------------------------------------------------
   - app/views/shared/_subscription_faq_lightbox.coffee (last modified: 2015-11-10 00:53:08 +0000)
   ---------------------------------------------------------------------- */
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Scribd.SubscriptionFaqLightbox = (function(superClass) {
    extend(SubscriptionFaqLightbox, superClass);

    function SubscriptionFaqLightbox(container) {
      this.open_login_window = bind(this.open_login_window, this);
      SubscriptionFaqLightbox.__super__.constructor.apply(this, arguments);
      this.logged_in = !!Scribd.logged_in;
      this.container.on("click", ".faq_start_free_trial", (function(_this) {
        return function() {
          if (!_this.logged_in) {
            Scribd.Lightbox.close('faq_lightbox');
            setTimeout(function() {
              return _this.open_login_window('subscription_faq_lightbox');
            }, 150);
            return false;
          } else {
            return true;
          }
        };
      })(this));
    }

    SubscriptionFaqLightbox.prototype.open_login_window = function() {
      var metadata, params;
      metadata = {
        context: 'pmp',
        page: 'subscription_faq_lightbox',
        action: 'start_trial',
        platform: 'web',
        logged_in: this.logged_in
      };
      metadata = encodeURIComponent(JSON.stringify(metadata));
      params = "metadata=" + metadata;
      return Scribd.SignIn.open("subscribe", "/archive/pmp_checkout?" + params);
    };

    return SubscriptionFaqLightbox;

  })(Scribd.Lightbox);

}).call(this);


/* ----------------------------------------------------------------------
   - app/views/shared/fancy_header/_nav_menu.coffee (last modified: 2016-01-15 19:39:42 +0000)
   ---------------------------------------------------------------------- */
(function() {
  Scribd.UI.NavMenu = (function() {
    function NavMenu(container) {
      this.container = $(container);
      $(window).one("load", (function(_this) {
        return function() {
          return _this.container.lazyimages();
        };
      })(this));
      this.container.on("click", (function(_this) {
        return function(e) {
          if ($(e.target).is(".nav_shroud")) {
            _this.toggle();
            return e.preventDefault();
          }
        };
      })(this));
    }

    NavMenu.prototype.toggle = function() {
      var body, set_show;
      if (this._toggling) {
        return;
      }
      this._toggling = true;
      body = $(document.body);
      set_show = (function(_this) {
        return function() {
          return body.toggleClass("nav_visible");
        };
      })(this);
      if (body.is(".show_nav")) {
        body.removeClass("nav_visible");
        return setTimeout((function(_this) {
          return function() {
            body.removeClass("show_nav");
            return _this._toggling = false;
          };
        })(this), 500);
      } else {
        body.addClass("show_nav");
        return setTimeout((function(_this) {
          return function() {
            body.addClass("nav_visible");
            return _this._toggling = false;
          };
        })(this), 16);
      }
    };

    return NavMenu;

  })();

}).call(this);


/* ----------------------------------------------------------------------
   - app/views/shared/fancy_header/header.coffee (last modified: 2016-03-22 20:38:47 +0000)
   ---------------------------------------------------------------------- */
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Scribd.FancyHeader = (function() {
    FancyHeader.prototype.header_offset = 0;

    function FancyHeader(container, opts) {
      this.container = container;
      this.opts = opts != null ? opts : {};
      this.setup_events = bind(this.setup_events, this);
      this.init = bind(this.init, this);
      Scribd.FancyHeader.instance = this;
      this.container = $(this.container);
      this.menu = new Scribd.UI.NavMenu($(document).find(".nav_shroud"));
      this.init();
      this.setup_events();
    }

    FancyHeader.prototype.init = function() {
      var body, login_btn, scrolled, subscribe_btn, try_show_button, update_header, win;
      win = $(window);
      body = $(document.body);
      scrolled = false;
      subscribe_btn = this.container.find(".header_subscribe_btn");
      login_btn = this.container.find(".header_login_btn");
      try_show_button = _.throttle(function() {
        if (scrolled) {
          subscribe_btn.fadeIn();
          return login_btn.fadeOut();
        } else {
          subscribe_btn.fadeOut();
          return login_btn.fadeIn();
        }
      }, 100);
      $(window).one("load", (function(_this) {
        return function() {
          return _this.container.lazyimages();
        };
      })(this));
      this.container.find(".logo_image").data("og_src", this.container.find(".logo_image").attr("src"));
      update_header = (function(_this) {
        return function(force, offset) {
          var $logo, scroll;
          if (force == null) {
            force = false;
          }
          if (offset == null) {
            offset = null;
          }
          if (offset) {
            _this.header_offset = offset;
          }
          scroll = win.scrollTop();
          $logo = _this.container.find(".logo_image");
          offset = Math.max(0, _this.header_offset - scroll);
          if (scroll > _this.header_offset) {
            if (!scrolled) {
              scrolled = true;
              body.addClass("scrolled");
              $logo.attr("src", $logo.data("alt_src"));
            }
          } else {
            if (scrolled) {
              scrolled = false;
              body.removeClass("scrolled");
              $logo.attr("src", $logo.data("og_src"));
            }
          }
          _this.container.css({
            top: offset + "px"
          });
          return try_show_button();
        };
      })(this);
      win.on("scroll", function() {
        return update_header();
      });
      update_header();
      return this.update_header_position = update_header;
    };

    FancyHeader.prototype.setup_events = function() {
      return $(document).dispatch("click", {
        menu_toggle_btn: (function(_this) {
          return function() {
            return _this.menu.toggle();
          };
        })(this),
        header_login_btn: function() {
          if ($(window).width() >= 800) {
            return Scribd.SignIn.open("global_login");
          } else {
            return "continue";
          }
        },
        header_subscribe_btn: (function(_this) {
          return function($btn) {
            if ($btn.is(".mobile_signup")) {
              return "continue";
            }
            return Scribd.SignIn.open($btn.data("signup_source") || "subscribe", $btn.attr("href"));
          };
        })(this)
      });
    };

    return FancyHeader;

  })();

}).call(this);


/* ----------------------------------------------------------------------
   - app/views/landing/comics.coffee (last modified: 2016-01-15 19:39:42 +0000)
   ---------------------------------------------------------------------- */
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Scribd.Landing.Comics = (function() {
    Comics.prototype.thumbnail_animation_step = 1000;

    function Comics(container) {
      var code;
      this.container = container;
      this.setup_slider = bind(this.setup_slider, this);
      this.animate_thumbnails = bind(this.animate_thumbnails, this);
      this.animate_content_showcase = bind(this.animate_content_showcase, this);
      this.setup_content = bind(this.setup_content, this);
      Scribd.Landing.Comics.instance = this;
      this.container = $(this.container);
      if (code = this.container.data("promo_code")) {
        this.promo_code = new Scribd.CustomPromo(this.container, {
          promo: code
        });
      }
      this.container.parallax_folds();
      this.setup_header();
      this.setup_content();
      if (!Scribd.noanimate) {
        this.container.find(".cta .fold_centerer").scrolled_into_viewport(this.animate_thumbnails);
        this.setup_slider();
      }
    }

    Comics.prototype.setup_header = function() {
      var update_scrolled;
      update_scrolled = function() {
        if ($(window).scrollTop() > 0) {
          return $(document.body).addClass("scrolled");
        } else {
          return $(document.body).removeClass("scrolled");
        }
      };
      return $(window).scroll(_.throttle(update_scrolled));
    };

    Comics.prototype.setup_content = function() {
      var change_content;
      change_content = (function(_this) {
        return function($el, e) {
          var content_showcase;
          $el = $(e.target);
          content_showcase = _this.container.find(".content_showcase");
          content_showcase.find(".tab").removeClass("current");
          $el.addClass("current");
          content_showcase.find(".content_title").html($el.data('header'));
          return _this.animate_content_showcase($el.data("section"));
        };
      })(this);
      return this.container.dispatch("click", {
        tab: change_content,
        menu_tab_btn: change_content,
        toggle_faq_btn: (function(_this) {
          return function() {
            return Scribd.Lightbox.open("faq_lightbox", Scribd.SubscriptionFaqLightbox);
          };
        })(this),
        require_login_btn: (function(_this) {
          return function($el, ev) {
            if (_this.promo_code) {
              _this.promo_code.submit();
              return;
            }
            if (Scribd.logged_in) {
              return "continue";
            }
            ev.preventDefault();
            return Scribd.SignIn.open("subscribe", $el.attr("href"));
          };
        })(this)
      });
    };

    Comics.prototype.animate_content_showcase = function(section) {
      this.container.find(".document_section.current").removeClass("current");
      return this.container.find(".document_section[data-section=" + section + "]").addClass("current").show().find(".tile").velocity("transition.slideUpIn", {
        stagger: 60,
        display: "inline-block",
        complete: (function(_this) {
          return function(elements) {
            return $(elements).css("opacity", "");
          };
        })(this)
      });
    };

    Comics.prototype.animate_thumbnails = function() {
      var $el, ch, current_quadrant, i, j, quadrants, randomizer, ref, thumbs;
      if (this.lock_animation) {
        return;
      }
      this.lock_animation = true;
      $(window).off("scroll", this.container.find(".cta .fold_centerer").data("scrolled_into_viewport_callback"));
      ch = this.container.find(".comics_holder");
      thumbs = ch.find(".comic_thumb");
      quadrants = [[10, 15], [60, 15], [10, 45], [60, 45]];
      current_quadrant = 0;
      for (i = j = 0, ref = thumbs.length; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
        $el = $(thumbs[i]);
        randomizer = Math.floor(Math.random() * 30);
        $el.css("left", (quadrants[current_quadrant][0] + randomizer) + "%");
        $el.css("top", (quadrants[current_quadrant][1] + randomizer) + "%");
        current_quadrant = (current_quadrant + 1) % quadrants.length;
        setTimeout((function(_this) {
          return function() {
            var $thumb;
            $thumb = $(thumbs.splice(0, 1));
            return $thumb.addClass("enlarge fadein_out");
          };
        })(this), this.thumbnail_animation_step * (i + 1));
      }
      return setTimeout((function(_this) {
        return function() {
          _this.container.find(".comic_thumb").removeClass("enlarge").removeClass("fadein_out");
          _this.lock_animation = false;
          return _this.animate_thumbnails();
        };
      })(this), (thumbs.length * this.thumbnail_animation_step) + this.thumbnail_animation_step * 4);
    };

    Comics.prototype.setup_slider = function() {
      var $bg, $faders, $logos, $thumb_rows, animate, slide_count;
      $bg = this.container.find(".backgrounds");
      $thumb_rows = this.container.find(".intro .thumb_row");
      $logos = this.container.find(".comic_logo");
      $faders = this.container.find(".fade_step");
      slide_count = $bg.data("step_count");
      this.hovering = false;
      this.container.find(".intro").on("hover", (function(_this) {
        return function(e) {
          if (e.type === "mouseenter") {
            return _this.hovering = true;
          } else {
            return _this.hovering = false;
          }
        };
      })(this));
      animate = (function(_this) {
        return function() {
          var step, to_fade_in;
          step = $bg.data("animation_step") || 0;
          if (_this.hovering && step !== 0) {
            return;
          }
          step = (step + 1) % slide_count;
          $faders.removeClass("fade_in");
          to_fade_in = $faders.filter(".step_" + step);
          _.delay(function() {
            return to_fade_in.addClass("fade_in");
          }, 2000);
          if (step === 1) {
            $bg.removeClass("smooth_left");
            _.defer(function() {
              return $bg.css("left", 0);
            });
          }
          _.delay(function() {
            $bg.addClass("smooth_left");
            if (step === 0) {
              return $bg.css("left", (-7800) + "px");
            } else {
              return $bg.css("left", (-1550 * step) + "px");
            }
          }, 150);
          return $bg.data("animation_step", step);
        };
      })(this);
      return setTimeout((function(_this) {
        return function() {
          animate();
          return setInterval(function() {
            return animate();
          }, 6000);
        };
      })(this), 3000);
    };

    return Comics;

  })();

}).call(this);


/* ----------------------------------------------------------------------
   - app/views/landing/mobile_landing.coffee (last modified: 2016-04-19 20:59:57 +0000)
   ---------------------------------------------------------------------- */
(function() {
  var base, no_default,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  no_default = Scribd.no_default;

  if (Scribd.Landing == null) {
    Scribd.Landing = {};
  }

  if ((base = Scribd.Landing).MobileLanding == null) {
    base.MobileLanding = {};
  }

  Scribd.Landing.MobileLanding.Index = (function(superClass) {
    extend(Index, superClass);

    function Index() {
      return Index.__super__.constructor.apply(this, arguments);
    }

    Index.prototype.events = function() {
      return {
        'submit .download_form': 'send_download_link_throttled',
        'click .landing_scroll_down_button': (function(_this) {
          return function() {
            return _this._track_click('scroll_down_button');
          };
        })(this)
      };
    };

    Index.prototype.initialize = function() {
      this._download_form = this.$('.download_form');
      this._error_message = "We couldn't send the message. Please try again.";
      new Scribd.Landing.MobileLanding.Slides({
        el: this.$('.mobile_landing_slides_container')
      });
      this.send_download_link_throttled = no_default(_.throttle(_.bind(this._send_download_link, this), 500));
      $('.app_store_button').on('click', _.bind(this.go_to_app_store, this));
      return $('.android_market_button').on('click', _.bind(this.go_to_google_play, this));
    };

    Index.prototype._reset_form = function() {
      return this._download_form.removeClass('in_progress');
    };

    Index.prototype._send_download_link = function(event) {
      var $input;
      this._track_click('download_form_submit_button');
      $input = $(event.currentTarget).find('.phone_or_email_input');
      this._download_form.removeClass('submitted').addClass('in_progress');
      return this._send($input.val()).then((function(_this) {
        return function(outcome) {
          var confirmation_text;
          confirmation_text = _this._download_form.find('.confirmation .text');
          if (outcome.success) {
            confirmation_text.text('Sent!');
          } else {
            confirmation_text.text(_this._error_message);
          }
          _this._reset_form();
          return _this._download_form.addClass("submitted");
        };
      })(this));
    };

    Index.prototype._track_click = function(target_name) {
      return $(document.body).track({
        category: "MobileLandingPage",
        action: "Click",
        label: target_name
      });
    };

    Index.prototype.go_to_app_store = no_default(function(event) {
      this._track_click('app_store_button');
      return window.location = $(event.currentTarget).prop('href');
    });

    Index.prototype.go_to_google_play = no_default(function(event) {
      this._track_click('google_play_button');
      return window.location = $(event.currentTarget).prop('href');
    });

    Index.prototype._send = function(phone_or_email) {
      var xhr;
      xhr = $.post('https://sbx.scribd.com/send_download_link', {
        phone_or_email: phone_or_email.replace(/ /g, "")
      });
      return xhr.fail((function(_this) {
        return function() {
          (new Scribd.Flasher).show("error", _this._error_message);
          return _this._reset_form();
        };
      })(this));
    };

    return Index;

  })(Backbone.View);

}).call(this);


/* ----------------------------------------------------------------------
   - app/views/landing/mobile_landing/_slides.coffee (last modified: 2015-11-10 00:53:08 +0000)
   ---------------------------------------------------------------------- */
(function() {
  var LegacySlideRenderer, RAFSlideRenderer, requestAnimationFrame,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;

  Scribd.Landing.MobileLanding.Slides = (function(superClass) {
    var BACKGROUNDS;

    extend(Slides, superClass);

    function Slides() {
      return Slides.__super__.constructor.apply(this, arguments);
    }

    BACKGROUNDS = {
      lighter: 'https://sbx.scribd.com/images/landing/mobile_landing/get_app_bench_galveston_02.jpg?1447116781',
      darker: 'https://sbx.scribd.com/images/landing/mobile_landing/get_app_bench_galveston_02_blue.jpg?1447116781'
    };

    Slides.prototype.events = {
      'click .landing_scroll_down_button': 'scroll_down'
    };

    Slides.prototype.initialize = function() {
      this._top_offset = parseInt(this.$('.landing_slides').css('padding-top'));
      this._setup_backgrounds();
      this._setup_slide_renderer();
      return this._start_device_slideshow();
    };

    Slides.prototype._setup_slide_renderer = function() {
      var renderer_class;
      if (requestAnimationFrame != null) {
        renderer_class = RAFSlideRenderer;
      } else {
        renderer_class = LegacySlideRenderer;
      }
      this._slide_renderer = new renderer_class({
        el: this.el,
        top_offset: this._top_offset
      });
      return this._slide_renderer.animate();
    };

    Slides.prototype._setup_backgrounds = function() {
      this.$('.top_background').backstretch(BACKGROUNDS.lighter, {
        heightDelta: -50
      });
      return this.$('.bottom_background').backstretch(BACKGROUNDS.darker, {
        heightDelta: -50
      });
    };

    Slides.prototype._start_device_slideshow = function() {
      var options;
      options = {
        fx: 'fade',
        speed: 300,
        timeout: 4000
      };
      this.$('.large_device_frame .inner').cycle(options);
      return this.$('.small_device_frame .inner').cycle(options);
    };

    Slides.prototype.scroll_down = function(event) {
      return Scribd.Landing.Shared.scroll_down(event.currentTarget, this._top_offset);
    };

    return Slides;

  })(Backbone.View);

  RAFSlideRenderer = (function(superClass) {
    var BOTTOM_BAR_HEIGHT, MOVEMENT_SPEED_MULTIPLIER, OPACITY_SPEED_MULTIPLIER, SLIDE_HEIGHT_MODIFIER;

    extend(RAFSlideRenderer, superClass);

    function RAFSlideRenderer() {
      return RAFSlideRenderer.__super__.constructor.apply(this, arguments);
    }

    SLIDE_HEIGHT_MODIFIER = 1200;

    OPACITY_SPEED_MULTIPLIER = 4;

    MOVEMENT_SPEED_MULTIPLIER = 3;

    BOTTOM_BAR_HEIGHT = 55;

    RAFSlideRenderer.prototype.initialize = function() {
      var one;
      _.bindAll(this, 'animate');
      this.top_offset = this.options.top_offset;
      this.top_background = this.$('.top_background');
      this.backgrounds = this.top_background.add('.bottom_background');
      this.last_offset = null;
      one = this.$('.one');
      this.slide_height = one.height();
      return $(window).on('resize', (function(_this) {
        return function() {
          return _this.slide_height = one.height();
        };
      })(this));
    };

    RAFSlideRenderer.prototype.animate = function() {
      var new_offset;
      new_offset = window.scrollY || window.pageYOffset;
      if (this.last_offset === new_offset) {
        requestAnimationFrame(this.animate);
        return;
      }
      this.last_offset = new_offset;
      this.render(this.last_offset);
      return requestAnimationFrame(this.animate);
    };

    RAFSlideRenderer.prototype.render = function(offset) {
      var opacity_progress, position_progress;
      opacity_progress = 1 - this.progress(offset, OPACITY_SPEED_MULTIPLIER);
      this.top_background.css('opacity', opacity_progress);
      position_progress = 1 - this.progress(offset, MOVEMENT_SPEED_MULTIPLIER);
      this.backgrounds.css('top', (BOTTOM_BAR_HEIGHT - 50) + "px");
      if (this.progress(offset, 1, 0) >= .45) {
        return $('body').addClass('past_first_slide');
      } else {
        return $('body').removeClass('past_first_slide');
      }
    };

    RAFSlideRenderer.prototype.progress = function(offset, speed_multiplier, slide_height_modifier) {
      var current_position, end_position, ratio;
      if (slide_height_modifier == null) {
        slide_height_modifier = SLIDE_HEIGHT_MODIFIER;
      }
      current_position = offset - 200;
      end_position = this.slide_height + slide_height_modifier;
      ratio = (current_position / end_position) * speed_multiplier;
      return Math.max(Math.min(ratio, 1), 0);
    };

    return RAFSlideRenderer;

  })(Backbone.View);

  LegacySlideRenderer = (function(superClass) {
    var SCROLL_THROTTLE_INTERVAL;

    extend(LegacySlideRenderer, superClass);

    function LegacySlideRenderer() {
      return LegacySlideRenderer.__super__.constructor.apply(this, arguments);
    }

    SCROLL_THROTTLE_INTERVAL = 100;

    LegacySlideRenderer.prototype.initialize = function() {
      this.one_contents = this.$('.one .landing_slide_contents');
      return this.top_background = this.$('.top_background');
    };

    LegacySlideRenderer.prototype.animate = function() {
      return $(window).scroll(_.throttle(((function(_this) {
        return function() {
          return _this.update_background();
        };
      })(this)), SCROLL_THROTTLE_INTERVAL));
    };

    LegacySlideRenderer.prototype.update_background = function() {
      var bottom;
      bottom = this.one_contents[0].getBoundingClientRect().bottom;
      if (bottom < 0) {
        $('body').addClass('past_first_slide');
        return this.top_background.css('display', 'none');
      } else {
        $('body').removeClass('past_first_slide');
        return this.top_background.css('display', 'block');
      }
    };

    return LegacySlideRenderer;

  })(Backbone.View);

}).call(this);




/************************************************************************
 * :class_inlines, 'spec_javascripts/js_spec', ... (last modified: (none))
 ************************************************************************/

